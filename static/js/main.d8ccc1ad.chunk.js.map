{"version":3,"sources":["components/SearchBar/SearchBar.js","components/Business/Business.js","components/BusinessList/BusinessList.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["sortByOptions","Best Match","Highest Rated","Most Reviewed","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","sortByOption","setState","event","target","value","searchYelp","preventDefault","_this2","keys","map","sortByOptionValue","react_default","a","createElement","onClick","handleSortByChange","className","getSortByClass","key","renderSortByOptions","onChange","placeholder","href","React","Component","Business","src","business","imageSrc","alt","name","address","city","zipCode","category","rating","reviewCount","BusinessList","businesses","components_Business_Business","id","Yelp","search","fetch","concat","headers","Authorization","then","response","json","jsonResponse","console","log","image_url","address1","postal_code","categories","title","review_count","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d8ccc1ad.chunk.js","sourcesContent":["import React from 'react';\nimport './SearchBar.css';\n\nconst sortByOptions = {\n  'Best Match': 'best_match',\n  'Highest Rated': 'rating',\n  'Most Reviewed': 'review_count'\n};\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: '',\n      location: '',\n      sortBy: 'best_match'\n    };\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  handleSortByChange(sortByOption) {\n    this.setState({\n      sortBy: sortByOption\n    });\n  }\n\n  handleTermChange(event) {\n    this.setState({\n      term: event.target.value\n    });\n  }\n\n  handleLocationChange(event) {\n    this.setState({\n      location: event.target.value\n    });\n  }\n\n  handleSearch(event) {\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n    event.preventDefault();\n  }\n\n  getSortByClass(sortByOption) {\n    if (this.state.sortBy === sortByOption) {\n      return 'active';\n    } else {\n      return '';\n    }\n  }\n  \n  renderSortByOptions() {\n    return Object.keys(sortByOptions).map(sortByOption => {\n      let sortByOptionValue = sortByOptions[sortByOption];\n      return <li onClick={this.handleSortByChange.bind(this, sortByOptionValue)} className={this.getSortByClass(sortByOptionValue)} key={sortByOptionValue}>{sortByOption}</li>\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <div className=\"SearchBar-sort-options\">\n          <ul>\n            {this.renderSortByOptions()};\n          </ul>\n        </div>\n        <div className=\"SearchBar-fields\">\n          <input onChange={this.handleTermChange} placeholder=\"Search Businesses\" />\n          <input onChange={this.handleLocationChange} placeholder=\"Where?\" />\n        </div>\n        <div onClick={this.handleSearch} className=\"SearchBar-submit\">\n          <a href=\"www.#.com\">Let's Go</a>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport './Business.css';\n\nclass Business extends React.Component {\n  render() {\n    return (\n      <div className=\"Business\">\n        <div className=\"image-container\">\n          <img src={this.props.business.imageSrc} alt='' />\n        </div>\n        <h2>{this.props.business.name}</h2>\n        <div className=\"Business-information\">\n          <div className=\"Business-address\">\n            <p>{this.props.business.address}</p>\n            <p>{this.props.business.city}</p>\n            <p>{this.props.business.state} {this.props.business.zipCode}</p>\n          </div>\n          <div className=\"Business-reviews\">\n            <h3>{this.props.business.category}</h3>\n            <h3 className=\"rating\">{this.props.business.rating} stars</h3>\n            <p>{this.props.business.reviewCount} reviews</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Business;\n","import React from 'react';\nimport './BusinessList.css';\nimport Business from '../Business/Business';\n\nclass BusinessList extends React.Component {\n  render() {\n    return (\n      <div className=\"BusinessList\">\n        {this.props.businesses.map(business => {\n            return <Business business={business} key={business.id} />\n        })}\n      </div>\n    );\n  }\n};\n\nexport default BusinessList;\n","const apiKey = 'vuoNSYa8nLq_bO4spUOoJMkHEPQBVwwlQrFwT_Euo6DFM9HRcGokNwBTSBuDP3BSl4lVd9pfpsFVLoxzqtSWT3QyEcxMCJ8JfFERjGaa9kwE_7neo42MA7qhowWyXHYx';\n\nconst Yelp = {\n    search(term, location, sortBy) {\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\n            headers: {\n                Authorization: `Bearer ${apiKey}`\n            }\n        }).then(response => {\n            return response.json();\n        }).then(jsonResponse => {\n            if (jsonResponse.businesses) {\n                return jsonResponse.businesses.map(business => {\n                    console.log(business);\n                    \n                    return {\n                        id: business.id,\n                        imageSrc: business.image_url,\n                        name: business.name,\n                        address: business.location.address1,\n                        city: business.location.city,\n                        state: business.location.state,\n                        zipCode: business.location.postal_code,\n                        category: business.categories.title,\n                        rating: business.rating,\n                        reviewCount: business.review_count\n                    }\n                });\n            }\n        });\n    }\n};\n\nexport default Yelp;","import React from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport BusinessList from './components/BusinessList/BusinessList.js';\nimport Yelp from './util/Yelp';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: []\n    };\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n  \n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy).then(businesses => {\n      this.setState({\n        businesses: businesses\n      })\n    });\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n          <SearchBar searchYelp={this.searchYelp} />\n          <BusinessList businesses={this.state.businesses} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}